package dev.lcy0x1.json;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;

import static java.lang.annotation.ElementType.TYPE;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

@Documented
@Retention(RUNTIME)
@Target(TYPE)
public @interface JsonClass {

	/**
	 * indicates that this constructor is only used by JSON
	 */
	@Target(ElementType.CONSTRUCTOR)
	@interface JCConstructor {
	}

	/**
	 * indicates that this class can be loaded with a value of another class
	 */
	@Documented
	@Retention(RUNTIME)
	@Target(TYPE)
	@interface JCGeneric {
		Class<?>[] value();
	}

	@Documented
	@Retention(RUNTIME)
	@Target(ElementType.METHOD)
	@interface JCGetter {
	}

	@Documented
	@Retention(RUNTIME)
	@Target(ElementType.FIELD)
	@interface JCIdentifier {
	}

	enum NoTag {
		OMIT, LOAD
	}

	enum RType {
		/**
		 * generated from json, requires default constructor, no not allow generate tag
		 */
		DATA,
		/**
		 * generated by holder class, requires generator tag
		 */
		FILL,
		/**
		 * generated from json, requires generator method with parameter JsonObject
		 */
		MANUAL
	}

	enum WType {
		DEF, CLASS
	}

	/**
	 * treat this class as collection
	 */
	boolean bypass() default false;

	String generator() default "";

	/**
	 * determines how to reat fields with no JsonFiel annotation
	 */
	JsonClass.NoTag noTag() default NoTag.OMIT;

	JsonClass.RType read() default RType.DATA;

	String serializer() default "";

	JsonClass.WType write() default WType.DEF;

}